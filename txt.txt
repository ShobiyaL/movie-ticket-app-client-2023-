import { daysInWeek } from "date-fns";
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useParams,Link } from "react-router-dom";
import { getAllMovies } from "../../features/movies/movieSlice";
import { fetchAsyncShowTime,getAllShowTime} from "../../features/showTime/showTimeSlice";
import CinemaCard from "../CinemaCard/CinemaCard";
import "./Cinema.scss";

const Cinema = () => {
  var weekday = ["Sunday ","Monday ","Tuesday ","Wednesday ","Thursday ","Friday ","Saturday "];
  var today = new Date();
  //  console.log(today);
  const [selectedDate, setSelectedDate] = useState("");
  var dd = String(today.getDate()).padStart(2, "0");
  var mm = String(today.getMonth()+1).padStart(2, "0");
  // console.log(mm);
  var dayNum = today.getDay()
  var day = weekday[dayNum]
  // console.log(day);
 
  var months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ];

  var selectedMonthName = months[mm-1];

  let dates = [
    dd,
    Number(dd) + 1,
    Number(dd) + 2,
    Number(dd) + 3,
    Number(dd) + 4,
    Number(dd) + 5,
    Number(dd) + 6,
  ];
  const dispatch = useDispatch();
  const { movieid } = useParams();
  // console.log(movieid);
 const data = useSelector(getAllMovies);
 console.log(data.cinemaData);
 let selected_cinema=data.cinemaData.filter((cinema,index)=>{
   if(cinema.movieId===movieid){
    return cinema
   }
 })
 console.log(selected_cinema);

// let renderShowTIme = showTime.showTime

useEffect(()=>{
  dispatch(fetchAsyncShowTime({movieid}))
},[dispatch,movieid]);

  let dateSelection = (result) => {
    console.log(result);
    let dateResult = new Date(`2023/${selectedMonthName}/${result}`).toLocaleDateString();
     console.log(dateResult);
     dispatch(fetchAsyncShowTime({movieid,dateResult}));
  };

 


  function DateButton({ date, handleClick }) {
    // console.log(props)
    return (
      <>
        <button className="time-display" onClick={handleClick}>
          {date}
        </button>
        
      </>
    );
  }
  return (
    <div>
      <div className="time-sheet">
        <div className="month">{selectedMonthName}</div>
        <div style={{padding:"20px 20px 0px 20px"}}>"Select date to check the available show timings"</div>
        <div className="date">
        
          {dates.map((answer, i) => {
            {
              /* console.log(answer); */
            }
            if (answer != "")
              return (
                <DateButton
                key={i}
                  date={answer}
                   handleClick={() => dateSelection(answer)}
                />
              );
          })}
        </div>
        {
          selected_cinema.map((c,i)=>{
            return <CinemaCard key ={i} data={c}></CinemaCard>
          })
        }
        
      </div>
     
      
    </div>
  );
};
export default Cinema;
